@using RoastMeApplication.Models.Entities;
@using RoastMeApplication.Models.DAL;
@model Comment
@{
    ViewBag.Title = "Home Page";
    Picture p = this.ViewBag.picture as Picture;
    Participant CurrentParticipant = null;
    if (Session["participantID"] != null) {
        CurrentParticipant = ViewBag.Participant as Participant;
    }
}

<div class="row">

    <div class="picture_index" style="margin-top: 30px;">
        <div id="userInfo">
            <p class="index_username">@p.Participant.Username</p>
            <p class="index_caption">@p.Caption</p>
        </div>


        <hr />
            <img class="img-circle" src="~/Content/Images/@p.ImagePath" alt="Caption" height="450" width="450" />
        @* put flag underneath image *@   
        <hr />
        @*SEPARATION OF PICTURE ^ AND COMMENTS v *@


        @{
            List<Comment> comments = CommentsManage.GetCommentByPictureId(p.Id).OrderByDescending(c => c.Time).ToList();
        }
        
        @using (Html.BeginForm("SubmitComment", "Picture", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.PictureId, new { Value = p.Id})
            @Html.HiddenFor(m => m.ParticipantId, new { Value = CurrentParticipant.Id })
            <input type="hidden" name="" />
            <div>
                @Html.TextBoxFor(m => m.Message, htmlAttributes: new { placeholder = "Enter your comment", id = "comment-input" })
                <input type="submit" value="Roast"/>
            </div>
            <hr />
        }

        @if (comments != null && comments.Count != 0)
        {
            foreach (Comment c in comments)
            {
                String background= "white"; 
                <div id="commentInfo">
                    <p class="index_username">@c.Participant.Username</p>
                    @if (c.Message != null)
                    {
                        <p class="index_caption">@c.Message</p>
                    }
                   
                    <hr />
                </div>

                if (c.Votes != null && c.Votes.Count!=0)
                {
                    foreach (Vote v in c.Votes)
                    {
                        if (v.CommentId == c.Id)
                        {
                            if (v.IsLike == true)
                            {
                                background = "green"; //like
                            }
                            else if(v.IsLike == false)
                            {
                                background = "blue";//dislike
                            }
                            else if (v.IsLike == null)
                            {
                                background = "white";//null
                            }
                        }
                    }
                }
                <div id="score" class="@c.Id">
                    <p>@c.VoteScore</p>
                    @if (background == "green")//rgb(0, 128, 0)
                    {
                        <button class="like" style="background-color:@background">like</button>
                        <button class="dislike"  style="background-color:white">dislike</button>
                    }
                    else if (background == "blue")//rgb(0, 0, 255)
                    {
                        <button class="like" style="background-color:white">like</button>
                        <button class="dislike" style="background-color:@background">dislike</button>
                    }
                    else if (background == "white")//rgb(255, 255, 255)
                    {
                        <button class="like" style="background-color:@background">like</button>
                        <button class="dislike" style="background-color:@background">dislike</button>
                    }

                    <button class="flag">flag</button>
                </div>
            }
        }


    </div>

</div>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script>
    $(document).ready(function () {
        var participant_id = @CurrentParticipant.Id;

        var JsonResult;
        $('.like').click(function () {
            var comment_id = this.parentElement.className;
            var rgb = $(this).css("background-color");
            if(rgb == 'rgb(255, 255, 255)'){
                JsonResult = "{'isLike':1,'ParticipantId': " + participant_id + ",'CommentId':"+comment_id+"}";
            }else if(rgb == 'rgb(0, 128, 0)'){
                JsonResult = "{'isLike':-1,'ParticipantId': " + participant_id + ",'CommentId':" + comment_id + "}";
            }
            alert(JsonResult);
            $.ajax({
                url: '@Url.Action("LikeVote", "Picture")',
                type: 'GET',
                dataType: 'json',
                cache: false,
                data: {JsonResult},
                success: function (results) {
                    alert(results)
                },
                error: function () {
                    alert('Error occured');
                }
            });
        });
        $('.dislike').click(function () {
            var comment_id = this.parentElement.className;
            var rgb = $(this).css("background-color");
            if(rgb == 'rgb(255, 255, 255)'){
                JsonResult = "{'isLike':0,'ParticipantId': " + participant_id + ",'CommentId':+" + comment_id + "}";
            }else if(rgb == 'rgb(0, 128, 0)'){
                JsonResult = "{'isLike':-1,'ParticipantId': " + participant_id + ",'CommentId':+" + comment_id + "}";
            }         
        });
        $('.flag').click(function () {
            JsonResult = "{'isFlagged':1,'CommentId':+" + comment_id + "}";
        });
        
     });

</script>
